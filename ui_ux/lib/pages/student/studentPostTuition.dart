// import 'package:awesome_dialog/awesome_dialog.dart';
// import 'package:http/http.dart';
// import 'package:ui_ux/constants/dropdown_list.dart';
// import 'package:ui_ux/constants/input_decoration.dart';
// import 'package:ui_ux/models/Student.dart';
// import 'package:ui_ux/models/advertisement.dart';
// import 'package:ui_ux/pages/student/services/student_services.dart';
// import 'package:ui_ux/pages/student/studentNotificationPage.dart';
// import 'package:ui_ux/pages/student/studentPreviousPosts.dart';
// import 'package:ui_ux/provider/student_provider.dart';
// import 'package:ui_ux/widgets/custom_dropdown_for_post_tuition.dart';
// import 'package:flutter/material.dart';

// class TuitionPostPage extends StatefulWidget {
//   const TuitionPostPage({super.key});

//   @override
//   State<TuitionPostPage> createState() => _TuitionPostPageState();
// }

// class _TuitionPostPageState extends State<TuitionPostPage> {
//   final GlobalKey<ScaffoldState> _scaffoldKey = GlobalKey<ScaffoldState>();

//   String picturePath = '';
//   String fullName = '';
//   String studentId = '';

//   Student? currentStudent = StudentUser.getCurrentStudentUser();
//   @override
//   void initState() {
//     super.initState();
//     picturePath = currentStudent!.picturePath.toString();
//     fullName = currentStudent!.fullName;
//     studentId = currentStudent!.id;
//   }

//   final List<String> tuitionType = ["Offline", "Online"];
//   final tuitionTypeController = TextEditingController();
//   final List<String> classOfTuition = [
//     '1',
//     '2',
//     '3',
//     '4',
//     '5',
//     '6',
//     '7',
//     '8',
//     '9',
//     '10',
//     '11',
//     '12',
//     'Alim',
//     'Dawra'
//   ];

//   final List<String> Salaries = salaryList;

//   final List<String> preferredGender = ["Male", "Female"];
//   final List<String> daysInWeek = ["1", "2", "3", "4", "5", "6", "7"];
//   String selectedGender = "";
//   String selectedDays = "";

//   String selectedTuitionType = "";
//   String selectedClass = "";
//   String selectedSalary = "";

//   final locationEditingController = TextEditingController();

//   final subjectEditingController = TextEditingController();

//   void handleSalary(String value) {
//     setState(() {
//       selectedSalary = value;
//     });
//   }

//   void handleTuitionType(String value) {
//     setState(() {
//       selectedTuitionType = value;
//     });
//   }

//   void handleClass(String value) {
//     setState(() {
//       selectedClass = value;
//     });
//   }

//   void handlePreferredGender(String value) {
//     setState(() {
//       selectedGender = value;
//     });
//   }

//   void handleDaysInWeek(String value) {
//     setState(() {
//       selectedDays = value;
//     });
//   }

//   void postTuitionAdvertisement() async {
//     final advertisementData = Advertisement(
//       id: '', // will be generated by the server
//       tuitionType: selectedTuitionType,
//       classNumber: selectedClass,
//       teacherGender: selectedGender,
//       daysInWeek: int.parse(selectedDays),
//       salary: int.parse(selectedSalary),
//       subjects: subjectEditingController.text,
//       location: locationEditingController.text,
//       studentId: studentId,
//       // Replace with the actual student ID
//       teacherId: [], // You can initialize this as an empty list
//       booked: false,
//       applied: false,
//     );

//     final apiService = ApiService();
//     final response = await apiService.postTuitionAdvertisement(
//       advertisementData,
//       studentId,
//     );

//     if (response.isNotEmpty) {
//       // ScaffoldMessenger.of(context).showSnackBar(
//       //   const SnackBar(content: Text('Advertisement posted successfully')),
//       AwesomeDialog(
//         context: context,
//         dialogType: DialogType.success,
//         animType: AnimType.topSlide,
//         showCloseIcon: true,
//         title: "Success",
//         desc: "Advertisement Posted Successfully",
//         btnOkOnPress: () {
//           // _onButtonPressed();
//         },
//       ).show();

//       setState(() {
//         advertisementData.id = response['_id'];
//       });
//       // Clear input fields and reset selected values here if needed
//     } else {
//       ScaffoldMessenger.of(context).showSnackBar(
//         const SnackBar(content: Text('Failed to post advertisement')),
//       );
//     }
//   }

//   @override
//   Widget build(BuildContext context) {
//     return Scaffold(
//       key: _scaffoldKey,
//       appBar: AppBar(
//         backgroundColor: Colors.white,
//         elevation: 0,
//         leading: Padding(
//           padding: const EdgeInsets.only(top: 8.0, left: 10),
//           child: CircleAvatar(
//             backgroundImage: NetworkImage(
//               picturePath,
//               //'https://images.unsplash.com/photo-1581382575275-97901c2635b7?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1287&q=80',
//             ),
//           ),
//         ),
//         title: Column(
//           crossAxisAlignment: CrossAxisAlignment.start,
//           children: [
//             Text(
//               'Hi!',
//               style: TextStyle(color: Colors.black),
//             ),
//             Text(
//               fullName,
//               // 'Muntasir Mamun',
//               style: Theme.of(context).textTheme.bodyText1,
//             ),
//           ],
//         ),
//         actions: <Widget>[
//           Padding(
//             padding: const EdgeInsets.all(8.0),
//             child: IconButton(
//               onPressed: () {
//                 Navigator.push(
//                   context,
//                   MaterialPageRoute(
//                     builder: (context) => studentNotification(),
//                   ),
//                 );
//               },
//               icon: Icon(Icons.notifications_active_outlined),
//               color: Colors.black,
//             ),
//           ),
//         ],
//       ),
//       body: SafeArea(
//         child: SingleChildScrollView(
//           child: Column(
//             //mainAxisAlignment: MainAxisAlignment.spaceEvenly,
//             mainAxisAlignment: MainAxisAlignment.start,
//             children: [
//               SizedBox(
//                 height: 20,
//               ),
//               Container(
//                 height: 70,
//                 width: 366,
//                 child: Expanded(
//                   child: ElevatedButton(
//                     onPressed: () {
//                       Navigator.push(
//                         context,
//                         MaterialPageRoute(
//                           builder: (context) => StudentPosts(),
//                         ),
//                       );
//                     },
//                     child: Text(
//                       "My Posts",
//                       style: TextStyle(
//                           fontFamily: "Poppins",
//                           fontSize: 18,
//                           fontWeight: FontWeight.w600),
//                     ),
//                     style: ButtonStyle(
//                         backgroundColor: MaterialStatePropertyAll<Color>(
//                             Colors.lightBlue.shade400),
//                         shape:
//                             MaterialStateProperty.all<RoundedRectangleBorder>(
//                                 RoundedRectangleBorder(
//                                     borderRadius:
//                                         BorderRadius.circular(20.0)))),
//                   ),
//                 ),
//               ),
//               SizedBox(
//                 height: 20,
//               ),
//               Row(
//                 children: [
//                   Expanded(
//                     child: Container(
//                       height: 2.0, // Adjust the height of the line as needed
//                       decoration: BoxDecoration(
//                         gradient: LinearGradient(
//                           colors: [
//                             Colors.transparent,
//                             Colors.black,
//                             Colors.transparent,
//                           ],
//                           stops: [
//                             0.1,
//                             0.7,
//                             0.9
//                           ], // Adjust the stops to control the boldness at the center
//                           begin: Alignment.centerLeft,
//                           end: Alignment.centerRight,
//                         ),
//                       ),
//                     ),
//                   ),
//                   Padding(
//                     padding: EdgeInsets.symmetric(
//                         horizontal:
//                             16), // Add spacing between gradients and text
//                     child: Text(
//                       "Add New Post",
//                       style:
//                           TextStyle(fontSize: 25, fontWeight: FontWeight.bold),
//                     ),
//                   ),
//                   Expanded(
//                     child: Container(
//                       height: 2.0, // Adjust the height of the line as needed
//                       decoration: BoxDecoration(
//                         gradient: LinearGradient(
//                           colors: [
//                             Colors.transparent,
//                             Colors.black,
//                             Colors.transparent,
//                           ],
//                           stops: [
//                             0.1,
//                             0.7,
//                             0.9
//                           ], // Adjust the stops to control the boldness at the center
//                           begin: Alignment.centerRight,
//                           end: Alignment.centerLeft,
//                         ),
//                       ),
//                     ),
//                   ),
//                 ],
//               ),
//               SizedBox(
//                 height: 5,
//               ),
//               Container(
//                 height: 100,
//                 child: Row(
//                     mainAxisAlignment: MainAxisAlignment.spaceEvenly,
//                     mainAxisSize: MainAxisSize.max,
//                     children: [
//                       Column(
//                         children: [
//                           Container(
//                             alignment: Alignment.topLeft,
//                             width: 145,
//                             //height: 80,
//                             child: Text(
//                               "Tuition Type",
//                               style: TextStyle(
//                                 fontFamily: "Poppins",
//                                 fontSize: 15,
//                                 fontWeight: FontWeight.w400,
//                               ),
//                               textAlign: TextAlign.left,
//                             ),
//                           ),
//                           CustomDropDownButtonForPostTuition(
//                             //value:widget.userDetails.occupation,
//                             items: tuitionType.map((valueItem) {
//                               return DropdownMenuItem(
//                                 value: valueItem,
//                                 child: Text(valueItem),
//                               );
//                             }).toList(),
//                             // iconData: Icons.business_center_sharp,
//                             onChangeFunctionality: handleTuitionType,
//                           ),
//                         ],
//                       ),
//                       Column(
//                         children: [
//                           Container(
//                             alignment: Alignment.topLeft,
//                             width: 145,
//                             child: Text(
//                               "Class",
//                               style: TextStyle(
//                                 fontFamily: "Poppins",
//                                 fontSize: 15,
//                                 fontWeight: FontWeight.w400,
//                               ),
//                               textAlign: TextAlign.left,
//                             ),
//                           ),
//                           CustomDropDownButtonForPostTuition(
//                             //value:widget.userDetails.occupation,
//                             items: classOfTuition.map((valueItem) {
//                               return DropdownMenuItem(
//                                 value: valueItem,
//                                 child: Text(valueItem),
//                               );
//                             }).toList(),
//                             // iconData: Icons.business_center_sharp,
//                             onChangeFunctionality: handleClass,
//                           ),
//                         ],
//                       ),
//                     ]),
//               ),
//               SizedBox(
//                 height: 5,
//               ),
//               Container(
//                 height: 100,
//                 child: Row(
//                     mainAxisAlignment: MainAxisAlignment.spaceEvenly,
//                     mainAxisSize: MainAxisSize.max,
//                     children: [
//                       Column(
//                         children: [
//                           Container(
//                             alignment: Alignment.topLeft,
//                             width: 145,
//                             //height: 80,
//                             child: Text(
//                               "Preferred Gender",
//                               style: TextStyle(
//                                 fontFamily: "Poppins",
//                                 fontSize: 15,
//                                 fontWeight: FontWeight.w400,
//                               ),
//                               textAlign: TextAlign.left,
//                             ),
//                           ),
//                           CustomDropDownButtonForPostTuition(
//                             //value:widget.userDetails.occupation,
//                             items: preferredGender.map((valueItem) {
//                               return DropdownMenuItem(
//                                 value: valueItem,
//                                 child: Text(valueItem),
//                               );
//                             }).toList(),
//                             // iconData: Icons.business_center_sharp,
//                             onChangeFunctionality: handlePreferredGender,
//                           ),
//                         ],
//                       ),
//                       Column(
//                         children: [
//                           Container(
//                             alignment: Alignment.topLeft,
//                             width: 145,
//                             child: Text(
//                               "Days In Week",
//                               style: TextStyle(
//                                 fontFamily: "Poppins",
//                                 fontSize: 15,
//                                 fontWeight: FontWeight.w400,
//                               ),
//                               textAlign: TextAlign.left,
//                             ),
//                           ),
//                           CustomDropDownButtonForPostTuition(
//                             //value:widget.userDetails.occupation,
//                             items: daysInWeek.map((valueItem) {
//                               return DropdownMenuItem(
//                                 value: valueItem,
//                                 child: Text(valueItem),
//                               );
//                             }).toList(),
//                             // iconData: Icons.business_center_sharp,
//                             onChangeFunctionality: handleDaysInWeek,
//                           ),
//                         ],
//                       ),
//                     ]),
//               ),
//               SizedBox(
//                 height: 5,
//               ),
//               Container(
//                 alignment: Alignment.topLeft,
//                 padding: EdgeInsets.fromLTRB(5, 0, 0, 0),
//                 width: 350,
//                 child: Text(
//                   "Salary",
//                   style: TextStyle(
//                     fontFamily: "Poppins",
//                     fontSize: 15,
//                     fontWeight: FontWeight.w400,
//                   ),
//                   textAlign: TextAlign.left,
//                 ),
//               ),
//               Container(
//                 //height: 42,
//                 width: 350,
//                 alignment: Alignment.topLeft,
//                 padding: EdgeInsets.fromLTRB(10, 0, 0, 0),
//                 decoration: containerDecoration,
//                 child: DropdownButtonFormField(
//                   decoration: InputDecoration(
//                       //   filled: true,
//                       border: InputBorder.none),
//                   hint: Text(
//                     "Salary",
//                     style: TextStyle(fontWeight: FontWeight.w600),
//                   ),
//                   // value: selectedValue,

//                   menuMaxHeight: 200,
//                   iconEnabledColor: Colors.grey[900],
//                   iconDisabledColor: Colors.grey[900],
//                   value: selectedSalary == '' ? null : selectedSalary,
//                   style: TextStyle(color: Colors.black, fontSize: 15),
//                   borderRadius: BorderRadius.circular(30.0),

//                   //underline: SizedBox(),
//                   isExpanded: true,
//                   dropdownColor: Colors.grey[100],
//                   onChanged: (value) {
//                     handleSalary(value.toString());
//                   },
//                   items: Salaries.map((valueItem) {
//                     return DropdownMenuItem(
//                       value: valueItem,
//                       child: Text(valueItem),
//                     );
//                   }).toList(),
//                 ),
//               ),
//               SizedBox(
//                 height: 5,
//               ),
//               Container(
//                 alignment: Alignment.topLeft,
//                 padding: EdgeInsets.fromLTRB(5, 0, 0, 0),
//                 width: 350,
//                 child: Text(
//                   "Subjects",
//                   style: TextStyle(
//                     fontFamily: "Poppins",
//                     fontSize: 15,
//                     fontWeight: FontWeight.w400,
//                   ),
//                   textAlign: TextAlign.left,
//                 ),
//               ),
//               Container(
//                 height: 50,
//                 width: 350,
//                 decoration: containerDecoration,
//                 child: TextFormField(
//                   validator: (value) {
//                     //value = value.toString();
//                     if (value == null || value.isEmpty) {
//                       return "Subjects";
//                     }
//                     return null;
//                   },
//                   cursorColor: Colors.grey[900],
//                   controller: subjectEditingController,
//                   decoration: normalDecoration,
//                 ),
//               ),
//               SizedBox(
//                 height: 5,
//               ),
//               Container(
//                 alignment: Alignment.topLeft,
//                 padding: EdgeInsets.fromLTRB(5, 0, 0, 0),
//                 width: 350,
//                 child: Text(
//                   "Location",
//                   style: TextStyle(
//                     fontFamily: "Poppins",
//                     fontSize: 15,
//                     fontWeight: FontWeight.w400,
//                   ),
//                   textAlign: TextAlign.left,
//                 ),
//               ),
//               Container(
//                 height: 50,
//                 width: 350,
//                 decoration: containerDecoration,
//                 child: TextFormField(
//                   validator: (value) {
//                     //value = value.toString();
//                     if (value == null || value.isEmpty) {
//                       return "please enter Your Location";
//                     }
//                     return null;
//                   },
//                   cursorColor: Colors.grey[900],
//                   controller: locationEditingController,
//                   decoration: normalDecoration,
//                 ),
//               ),
//               SizedBox(
//                 height: 30,
//               ),
//               Container(
//                 height: 50,
//                 width: 366,
//                 child: Expanded(
//                   child: ElevatedButton(
//                     onPressed: () {
//                       postTuitionAdvertisement();
//                     },
//                     child: Text(
//                       "Post",
//                       style: TextStyle(
//                           fontFamily: "Poppins",
//                           fontSize: 18,
//                           fontWeight: FontWeight.w600),
//                     ),
//                     style: ButtonStyle(
//                         backgroundColor: MaterialStatePropertyAll<Color>(
//                             Colors.lightBlue.shade400),
//                         shape:
//                             MaterialStateProperty.all<RoundedRectangleBorder>(
//                                 RoundedRectangleBorder(
//                                     borderRadius:
//                                         BorderRadius.circular(20.0)))),
//                   ),
//                 ),
//               ),
//               SizedBox(height: 50),
//             ],
//           ),
//         ),
//       ),
//     );
//   }
// }

import 'package:awesome_dialog/awesome_dialog.dart';
import 'package:http/http.dart';
import 'package:ui_ux/constants/dropdown_list.dart';
import 'package:ui_ux/constants/input_decoration.dart';
import 'package:ui_ux/models/Student.dart';
import 'package:ui_ux/models/advertisement.dart';
import 'package:ui_ux/pages/student/services/student_services.dart';
import 'package:ui_ux/pages/student/studentNotificationPage.dart';
import 'package:ui_ux/pages/student/studentPreviousPosts.dart';
import 'package:ui_ux/provider/student_provider.dart';
import 'package:ui_ux/widgets/custom_dropdown_for_post_tuition.dart';
import 'package:flutter/material.dart';

class TuitionPostPage extends StatefulWidget {
  const TuitionPostPage({super.key});

  @override
  State<TuitionPostPage> createState() => _TuitionPostPageState();
}

class _TuitionPostPageState extends State<TuitionPostPage> {
  final GlobalKey<ScaffoldState> _scaffoldKey = GlobalKey<ScaffoldState>();

  String picturePath = '';
  String fullName = '';
  String studentId = '';
  List<String> availableSubjects = [
    'Math',
    'Chemistry',
    'Physics',
    'ICT',
    'Biology',
    // Add more subjects as needed
  ];
  int clickPhysics = 0,
      clickMath = 0,
      clickChemistry = 0,
      clickEnglish = 0,
      clickBiology = 0,
      clickIct = 0;

  int _onButtonPressed(int clickCount) {
    return clickCount == 0 ? 1 : 0;
  }

  Color getButtonColor(int clickCount) {
    return clickCount % 2 == 0 ? Colors.grey : Color(0xFF00BFA5);
  }

  Student? currentStudent = StudentUser.getCurrentStudentUser();
  @override
  void initState() {
    super.initState();
    picturePath = currentStudent!.picturePath.toString();
    fullName = currentStudent!.fullName;
    studentId = currentStudent!.id;
  }

  final List<String> tuitionType = ["Offline", "Online"];
  final tuitionTypeController = TextEditingController();
  final List<String> classOfTuition = [
    '1',
    '2',
    '3',
    '4',
    '5',
    '6',
    '7',
    '8',
    '9',
    '10',
    '11',
    '12',
    'Alim',
    'Dawra'
  ];

  final List<String> Salaries = salaryList;

  final List<String> preferredGender = ["Male", "Female"];
  final List<String> daysInWeek = ["1", "2", "3", "4", "5", "6", "7"];
  String selectedGender = "";
  String selectedDays = "";

  String selectedTuitionType = "";
  String selectedClass = "";
  String selectedSalary = "";

  final locationEditingController = TextEditingController();

  final subjectEditingController = TextEditingController();

  void handleSalary(String value) {
    setState(() {
      selectedSalary = value;
    });
  }

  void handleTuitionType(String value) {
    setState(() {
      selectedTuitionType = value;
    });
  }

  void handleClass(String value) {
    setState(() {
      selectedClass = value;
    });
  }

  void handlePreferredGender(String value) {
    setState(() {
      selectedGender = value;
    });
  }

  void handleDaysInWeek(String value) {
    setState(() {
      selectedDays = value;
    });
  }

  void postTuitionAdvertisement() async {
    final advertisementData = Advertisement(
      id: '', // will be generated by the server
      tuitionType: selectedTuitionType,
      classNumber: selectedClass,
      teacherGender: selectedGender,
      daysInWeek: int.parse(selectedDays),
      salary: int.parse(selectedSalary),
      subjects: subjectEditingController.text,
      location: locationEditingController.text,
      studentId: studentId,
      // Replace with the actual student ID
      teacherId: [], // You can initialize this as an empty list
      booked: false,
      applied: false,
    );

    final apiService = ApiService();
    final response = await apiService.postTuitionAdvertisement(
      advertisementData,
      studentId,
    );

    if (response.isNotEmpty) {
      // ScaffoldMessenger.of(context).showSnackBar(
      //   const SnackBar(content: Text('Advertisement posted successfully')),
      AwesomeDialog(
        context: context,
        dialogType: DialogType.success,
        animType: AnimType.topSlide,
        showCloseIcon: true,
        title: "Success",
        desc: "Advertisement Posted Successfully",
        btnOkOnPress: () {
          // _onButtonPressed();
        },
      ).show();

      setState(() {
        advertisementData.id = response['_id'];
      });
      // Clear input fields and reset selected values here if needed
    } else {
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(content: Text('Failed to post advertisement')),
      );
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      key: _scaffoldKey,
      appBar: AppBar(
        backgroundColor: Colors.white,
        elevation: 0,
        leading: Padding(
          padding: const EdgeInsets.only(top: 8.0, left: 10),
          child: CircleAvatar(
            backgroundImage: NetworkImage(
              picturePath,
              //'https://images.unsplash.com/photo-1581382575275-97901c2635b7?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1287&q=80',
            ),
          ),
        ),
        title: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(
              'Hi!',
              style: TextStyle(color: Colors.black),
            ),
            Text(
              fullName,
              // 'Muntasir Mamun',
              style: Theme.of(context).textTheme.bodyText1,
            ),
          ],
        ),
        actions: <Widget>[
          Padding(
            padding: const EdgeInsets.all(8.0),
            child: IconButton(
              onPressed: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => studentNotification(),
                  ),
                );
              },
              icon: Icon(Icons.notifications_active_outlined),
              color: Colors.black,
            ),
          ),
        ],
      ),
      body: SafeArea(
        child: SingleChildScrollView(
          child: Column(
            //mainAxisAlignment: MainAxisAlignment.spaceEvenly,
            mainAxisAlignment: MainAxisAlignment.start,
            children: [
              SizedBox(
                height: 20,
              ),
              Container(
                height: 70,
                width: 366,
                child: Expanded(
                  child: ElevatedButton(
                    onPressed: () {
                      Navigator.push(
                        context,
                        MaterialPageRoute(
                          builder: (context) => StudentPosts(),
                        ),
                      );
                    },
                    child: Text(
                      "My Posts",
                      style: TextStyle(
                          fontFamily: "Poppins",
                          fontSize: 18,
                          fontWeight: FontWeight.w600),
                    ),
                    style: ButtonStyle(
                        backgroundColor: MaterialStatePropertyAll<Color>(
                            Colors.lightBlue.shade400),
                        shape:
                            MaterialStateProperty.all<RoundedRectangleBorder>(
                                RoundedRectangleBorder(
                                    borderRadius:
                                        BorderRadius.circular(20.0)))),
                  ),
                ),
              ),
              SizedBox(
                height: 20,
              ),
              Row(
                children: [
                  Expanded(
                    child: Container(
                      height: 2.0, // Adjust the height of the line as needed
                      decoration: BoxDecoration(
                        gradient: LinearGradient(
                          colors: [
                            Colors.transparent,
                            Colors.black,
                            Colors.transparent,
                          ],
                          stops: [
                            0.1,
                            0.7,
                            0.9
                          ], // Adjust the stops to control the boldness at the center
                          begin: Alignment.centerLeft,
                          end: Alignment.centerRight,
                        ),
                      ),
                    ),
                  ),
                  Padding(
                    padding: EdgeInsets.symmetric(
                        horizontal:
                            16), // Add spacing between gradients and text
                    child: Text(
                      "Add New Post",
                      style:
                          TextStyle(fontSize: 25, fontWeight: FontWeight.bold),
                    ),
                  ),
                  Expanded(
                    child: Container(
                      height: 2.0, // Adjust the height of the line as needed
                      decoration: BoxDecoration(
                        gradient: LinearGradient(
                          colors: [
                            Colors.transparent,
                            Colors.black,
                            Colors.transparent,
                          ],
                          stops: [
                            0.1,
                            0.7,
                            0.9
                          ], // Adjust the stops to control the boldness at the center
                          begin: Alignment.centerRight,
                          end: Alignment.centerLeft,
                        ),
                      ),
                    ),
                  ),
                ],
              ),
              SizedBox(
                height: 5,
              ),
              Container(
                height: 100,
                child: Row(
                    mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                    mainAxisSize: MainAxisSize.max,
                    children: [
                      Column(
                        children: [
                          Container(
                            alignment: Alignment.topLeft,
                            width: 145,
                            //height: 80,
                            child: Text(
                              "Tuition Type",
                              style: TextStyle(
                                fontFamily: "Poppins",
                                fontSize: 15,
                                fontWeight: FontWeight.w400,
                              ),
                              textAlign: TextAlign.left,
                            ),
                          ),
                          CustomDropDownButtonForPostTuition(
                            //value:widget.userDetails.occupation,
                            items: tuitionType.map((valueItem) {
                              return DropdownMenuItem(
                                value: valueItem,
                                child: Text(valueItem),
                              );
                            }).toList(),
                            // iconData: Icons.business_center_sharp,
                            onChangeFunctionality: handleTuitionType,
                          ),
                        ],
                      ),
                      Column(
                        children: [
                          Container(
                            alignment: Alignment.topLeft,
                            width: 145,
                            child: Text(
                              "Class",
                              style: TextStyle(
                                fontFamily: "Poppins",
                                fontSize: 15,
                                fontWeight: FontWeight.w400,
                              ),
                              textAlign: TextAlign.left,
                            ),
                          ),
                          CustomDropDownButtonForPostTuition(
                            //value:widget.userDetails.occupation,
                            items: classOfTuition.map((valueItem) {
                              return DropdownMenuItem(
                                value: valueItem,
                                child: Text(valueItem),
                              );
                            }).toList(),
                            // iconData: Icons.business_center_sharp,
                            onChangeFunctionality: handleClass,
                          ),
                        ],
                      ),
                    ]),
              ),
              SizedBox(
                height: 5,
              ),
              Container(
                height: 100,
                child: Row(
                    mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                    mainAxisSize: MainAxisSize.max,
                    children: [
                      Column(
                        children: [
                          Container(
                            alignment: Alignment.topLeft,
                            width: 145,
                            //height: 80,
                            child: Text(
                              "Preferred Gender",
                              style: TextStyle(
                                fontFamily: "Poppins",
                                fontSize: 15,
                                fontWeight: FontWeight.w400,
                              ),
                              textAlign: TextAlign.left,
                            ),
                          ),
                          CustomDropDownButtonForPostTuition(
                            //value:widget.userDetails.occupation,
                            items: preferredGender.map((valueItem) {
                              return DropdownMenuItem(
                                value: valueItem,
                                child: Text(valueItem),
                              );
                            }).toList(),
                            // iconData: Icons.business_center_sharp,
                            onChangeFunctionality: handlePreferredGender,
                          ),
                        ],
                      ),
                      Column(
                        children: [
                          Container(
                            alignment: Alignment.topLeft,
                            width: 145,
                            child: Text(
                              "Days In Week",
                              style: TextStyle(
                                fontFamily: "Poppins",
                                fontSize: 15,
                                fontWeight: FontWeight.w400,
                              ),
                              textAlign: TextAlign.left,
                            ),
                          ),
                          CustomDropDownButtonForPostTuition(
                            //value:widget.userDetails.occupation,
                            items: daysInWeek.map((valueItem) {
                              return DropdownMenuItem(
                                value: valueItem,
                                child: Text(valueItem),
                              );
                            }).toList(),
                            // iconData: Icons.business_center_sharp,
                            onChangeFunctionality: handleDaysInWeek,
                          ),
                        ],
                      ),
                    ]),
              ),
              SizedBox(
                height: 5,
              ),
              Container(
                alignment: Alignment.topLeft,
                padding: EdgeInsets.fromLTRB(5, 0, 0, 0),
                width: 350,
                child: Text(
                  "Salary",
                  style: TextStyle(
                    fontFamily: "Poppins",
                    fontSize: 15,
                    fontWeight: FontWeight.w400,
                  ),
                  textAlign: TextAlign.left,
                ),
              ),
              Container(
                //height: 42,
                width: 350,
                alignment: Alignment.topLeft,
                padding: EdgeInsets.fromLTRB(10, 0, 0, 0),
                decoration: containerDecoration,
                child: DropdownButtonFormField(
                  decoration: InputDecoration(
                      //   filled: true,
                      border: InputBorder.none),
                  hint: Text(
                    "Salary",
                    style: TextStyle(fontWeight: FontWeight.w600),
                  ),
                  // value: selectedValue,

                  menuMaxHeight: 200,
                  iconEnabledColor: Colors.grey[900],
                  iconDisabledColor: Colors.grey[900],
                  value: selectedSalary == '' ? null : selectedSalary,
                  style: TextStyle(color: Colors.black, fontSize: 15),
                  borderRadius: BorderRadius.circular(30.0),

                  //underline: SizedBox(),
                  isExpanded: true,
                  dropdownColor: Colors.grey[100],
                  onChanged: (value) {
                    handleSalary(value.toString());
                  },
                  items: Salaries.map((valueItem) {
                    return DropdownMenuItem(
                      value: valueItem,
                      child: Text(valueItem),
                    );
                  }).toList(),
                ),
              ),
              SizedBox(
                height: 5,
              ),
              Container(
                alignment: Alignment.topLeft,
                padding: EdgeInsets.fromLTRB(5, 0, 0, 0),
                width: 350,
                child: Text(
                  "Subjects",
                  style: TextStyle(
                    fontFamily: "Poppins",
                    fontSize: 15,
                    fontWeight: FontWeight.w400,
                  ),
                  textAlign: TextAlign.left,
                ),
              ),
              Container(
                height: 50,
                width: 350,
                decoration: containerDecoration,
                child: TextFormField(
                  validator: (value) {
                    //value = value.toString();
                    if (value == null || value.isEmpty) {
                      return "Subjects";
                    }
                    return null;
                  },
                  cursorColor: Colors.grey[900],
                  controller: subjectEditingController,
                  decoration: normalDecoration,
                ),
              ),
              SizedBox(
                height: 5,
              ),
              Row(
                mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                children: [
                  ElevatedButton(
                    onPressed: () {
                      setState(() {
                        if (clickPhysics == 0) {
                          if (!subjectEditingController.text
                              .contains("Physics")) {
                            if (subjectEditingController.text.isEmpty) {
                              subjectEditingController.text = "Physics";
                            } else {
                              subjectEditingController.text += ",Physics";
                            }
                          }
                        } else {
                          subjectEditingController.text =
                              subjectEditingController.text
                                  .replaceAll(",Physics", "")
                                  .replaceAll("Physics,", "")
                                  .replaceAll("Physics", "")
                                  .trim(); // To remove extra commas and spaces
                        }
                        clickPhysics = _onButtonPressed(clickPhysics);
                      });
                    },
                    child: Text('Physics'),
                    style: ElevatedButton.styleFrom(
                      backgroundColor: getButtonColor(clickPhysics),
                    ),
                  ),
                  ElevatedButton(
                    onPressed: () {
                      setState(() {
                        if (clickMath == 0) {
                          if (!subjectEditingController.text.contains("Math")) {
                            if (subjectEditingController.text.isEmpty) {
                              subjectEditingController.text = "Math";
                            } else {
                              subjectEditingController.text += ",Math";
                            }
                          }
                        } else {
                          subjectEditingController.text =
                              subjectEditingController.text
                                  .replaceAll(",Math", "")
                                  .replaceAll("Math,", "")
                                  .replaceAll("Math", "")
                                  .trim(); // To remove extra commas and spaces
                        }
                        clickMath = _onButtonPressed(clickMath);
                      });
                    },
                    child: Text('Math'),
                    style: ElevatedButton.styleFrom(
                      backgroundColor: getButtonColor(clickMath),
                    ),
                  ),
                  ElevatedButton(
                    onPressed: () {
                      setState(() {
                        if (clickChemistry == 0) {
                          if (!subjectEditingController.text
                              .contains("Chemistry")) {
                            if (subjectEditingController.text.isEmpty) {
                              subjectEditingController.text = "Chemistry";
                            } else {
                              subjectEditingController.text += ",Chemistry";
                            }
                          }
                        } else {
                          subjectEditingController.text =
                              subjectEditingController.text
                                  .replaceAll(",Chemistry", "")
                                  .replaceAll("Chemistry,", "")
                                  .replaceAll("Chemistry", "")
                                  .trim(); // To remove extra commas and spaces
                        }
                        clickChemistry = _onButtonPressed(clickChemistry);
                      });
                    },
                    child: Text('Chemistry'),
                    style: ElevatedButton.styleFrom(
                      backgroundColor: getButtonColor(clickChemistry),
                    ),
                  ),

                  // ElevatedButton(
                  //   onPressed: () {
                  //     clickChemistry = _onButtonPressed(clickChemistry);
                  //     setState(() {
                  //       if (clickChemistry == 1) {
                  //         if (subjectEditingController.text == "") {
                  //           subjectEditingController.text += "Chemistry";
                  //         } else {
                  //           subjectEditingController.text += ",Chemistry";
                  //         }
                  //       } else {
                  //         subjectEditingController.text
                  //             .replaceAll("Chemistry", "");
                  //         subjectEditingController.text
                  //             .replaceAll("Chemistry,", "");
                  //         subjectEditingController.text
                  //             .replaceAll(",Chemistry", "");
                  //       }
                  //     });
                  //   },
                  //   child: Text('Chemistry'),
                  //   style: ElevatedButton.styleFrom(
                  //     backgroundColor: getButtonColor(clickChemistry),
                  //   ),
                  // ),
                ],
              ),
              Container(
                alignment: Alignment.topLeft,
                padding: EdgeInsets.fromLTRB(5, 0, 0, 0),
                width: 350,
                child: Text(
                  "Location",
                  style: TextStyle(
                    fontFamily: "Poppins",
                    fontSize: 15,
                    fontWeight: FontWeight.w400,
                  ),
                  textAlign: TextAlign.left,
                ),
              ),
              Container(
                height: 50,
                width: 350,
                decoration: containerDecoration,
                child: TextFormField(
                  validator: (value) {
                    //value = value.toString();
                    if (value == null || value.isEmpty) {
                      return "please enter Your Location";
                    }
                    return null;
                  },
                  cursorColor: Colors.grey[900],
                  controller: locationEditingController,
                  decoration: normalDecoration,
                ),
              ),
              SizedBox(
                height: 30,
              ),
              Container(
                height: 50,
                width: 366,
                child: Expanded(
                  child: ElevatedButton(
                    onPressed: () {
                      postTuitionAdvertisement();
                    },
                    child: Text(
                      "Post",
                      style: TextStyle(
                          fontFamily: "Poppins",
                          fontSize: 18,
                          fontWeight: FontWeight.w600),
                    ),
                    style: ButtonStyle(
                        backgroundColor: MaterialStatePropertyAll<Color>(
                            Colors.lightBlue.shade400),
                        shape:
                            MaterialStateProperty.all<RoundedRectangleBorder>(
                                RoundedRectangleBorder(
                                    borderRadius:
                                        BorderRadius.circular(20.0)))),
                  ),
                ),
              ),
              SizedBox(height: 50),
            ],
          ),
        ),
      ),
    );
  }
}
